// Generated by CoffeeScript 1.12.3
var docpadConfig,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

docpadConfig = {
  collections: {
    pages: function() {
      return this.getCollection("html").findAllLive({
        pageType: 'main'
      }, [
        {
          order: 1
        }
      ]);
    },
    portfolio: function() {
      return this.getCollection("html").findAllLive({
        pageType: 'portfolio'
      }, [
        {
          order: 1
        }
      ]);
    },
    newPieces: function() {
      return this.getCollection("html").findAllLive({
        relativeOutDirPath: /(?:tables|cabinets|miscellaneous)/,
        isNew: true
      }, [
        {
          order: 1
        }
      ]);
    },
    tables: function() {
      return this.getCollection("html").findAllLive({
        relativeOutDirPath: 'tables'
      }, [
        {
          order: 1
        }
      ]);
    },
    cabinets: function() {
      return this.getCollection("html").findAllLive({
        relativeOutDirPath: 'cabinets'
      }, [
        {
          order: 1
        }
      ]);
    },
    trays: function() {
      return this.getCollection("html").findAllLive({
        relativeOutDirPath: 'trays'
      }, [
        {
          order: 1
        }
      ]);
    },
    miscellaneous: function() {
      return this.getCollection("html").findAllLive({
        relativeOutDirPath: 'miscellaneous'
      }, [
        {
          order: 1
        }
      ]);
    }
  },
  templateData: {
    getPreparedLogoSrc: function() {
      if (this.document.altLogoSrc) {
        return "../images/logo.gif";
      } else {
        return "images/logo.gif";
      }
    },
    site: {
      url: 'http://www.kurve.ca'
    },
    getUrl: function(_, site) {
      var _getUrl;
      site = site || this.site.url;
      if (indexOf.call(this.getEnvironments(), 'static') >= 0) {
        if (typeof _ === "string") {
          if (_[0] === "/" && _[1] !== "/") {
            return site + _;
          }
          return _;
        }
        if (typeof _ === "object") {
          if (_.url) {
            return this.getUrl(_.url, site);
          }
          if (_.map) {
            _getUrl = arguments.callee;
            return _.map(function(d) {
              return _getUrl(d, site);
            });
          }
        }
        return _;
      } else {
        return _.url;
      }
    },
    plugins: {
      sass: {
        compass: 'true',
        sassPath: 'C:\Ruby23\bin\sass.bat',
        scssPath: 'C:\Ruby23\bin\scss.bat'
      }
    }
  }
};

module.exports = docpadConfig;
